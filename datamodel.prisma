type User {
  id: ID! @id
  userId: String! @unique
  password: String!
  email: String! @unique
  username: String! @default(value: "")
  nickname: String @unique
  phoneNum: String!
  bio: String @default(value: "")
  address: String @default(value: "")
  posts: [Post!]! @relation(name:"PostsOfUser", onDelete:CASCADE)
  comments: [Comment!]! @relation(name:"CommentsOfUser", onDelete:CASCADE)
  reservations: [Reservation!] @relation(name:"ReservationsOfUser", onDelete:CASCADE)
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type NoUser {
  id: ID! @id
  username: String! @default(value: "")
  bio: String @default(value: "")
  phoneNum: String!
  email: String!
  reservations: [Reservation!] @relation(name:"ReservationsOfNoUser", onDelete:CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Guest {
  id: ID! @id
  username: String! @default(value: "")
  bio: String @default(value: "")
  phoneNum: String!
  email: String!
  reservation: Reservation
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  board: Board @relation(name:"PostsOfBoard")
  type: String!
  title: String!
  content: String!
  views: Int @default(value: 0)
  user: User @relation(name:"PostsOfUser")
  files: [File!]! @relation(name: "FilesOfPost" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfPost" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Board {
  id: ID! @id
  name: String!
  posts: [Post!] @relation(name:"PostsOfBoard", onDelete:CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name:"CommentsOfUser")
  post: Post @relation(name:"CommentOfPost")
  event: Event @relation(name: "CommentOfEvent")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  event: Event @relation(name: "FilesOfEvent")
  type: Type @relation(name: "FilesOfType")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Event {
  id: ID! @id
  eventType: String!
  title: String!
  period: String!
  subTitle: String
  content: String!
  thumbnail: String
  files: [File!] @relation(name: "FilesOfEvent" onDelete: CASCADE)
  comments: [Comment!] @relation(name: "CommentOfEvent" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Type {
  id: ID! @id
  typeName: String!
  price: Int!
  typeCount: Int! @default(value: 0)
  subTypes: [SubType!] @relation(name: "SubTypesOfType" onDelete: CASCADE)
  reservations: [Reservation!] @relation(name: "ReservationsOfType")
  files: [File!] @relation(name: "FilesOfType" onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type SubType {
  id: ID! @id
  type: Type! @relation(name: "SubTypesOfType")
  subTypeName: String!
  price: Int!
  description: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Reservation {
  id: ID! @id
  user: User @relation(name:"ReservationsOfUser")
  noUser: NoUser @relation(name:"ReservationsOfNoUser")
  guest: Guest @relation(link: INLINE)
  type: Type! @relation(name: "ReservationsOfType")
  subType: SubType
  checkIn: DateTime!
  checkOut: DateTime!
  needs: String!
  adult: Int!
  child: Int!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Popup {
  id: ID! @id
  title: String!
  content: String!
  url: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}